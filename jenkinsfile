pipeline{
    // agent{
    //     docker { 
    //         image 'my-light-dev-tools-all' 
    //         args '--privileged --user 0'
    //     }
    // }
    agent any

    environment{
        urlGit = "github.com/edwinmalihu"
        repoconfig = "github.com/edwinmalihu/fly-config.git"
        serviceName = ""
        urlregistry = "https://registry-1.docker.io"
        myrepo = "edwinmalihu"
        serviceList = ""
        serviceTag = ""


    }

    stages{
        stage("Setup Parameter"){
            steps{
                script{
                    cleanWs()
                    withFileParameter('datafile') {
                        sh "mv $datafile list-service.txt"
                        def content
                        content = sh(returnStdout: true, script: "cat list-service.txt")
                        serviceList = content.readLines()

                        
                    }
                }
            }
        }
        stage("Clone Source"){
            steps{
                script{
                    withCredentials([string(credentialsId: 'token-github', variable: 'GITHUB_TOKEN')]) {
                        // get sercvice
                        sh "git clone --branch main https://oauth2:${GITHUB_TOKEN}@$repoconfig"
                        sh "cat ${WORKSPACE}/fly-config/jenkins/api-gateway.toml"

                        serviceList.each { sourceService ->
                            serviceName = sourceService.split(':')[0].toString()
                            serviceTag = sourceService.split(':')[1].toString()
                        
                            sh """
                                git clone --branch $serviceTag https://oauth2:${GITHUB_TOKEN}@$urlGit/${serviceName}.git ${serviceName}_${serviceTag}
                            """

                        }
                        
                    }  
                }
            }
        }

        stage("Build & Push Image"){
            steps{
                script{
                    // withCredentials([usernamePassword(credentialsId: 'docker-hub-cred', passwordVariable: 'password', usernameVariable: 'username')]) {
                    //     serviceList.each { sourceService ->
                    //         serviceName = sourceService.split(':')[0].toString()
                    //         serviceTag = sourceService.split(':')[1].toString()

                    //         sh """
                    //             cd ${serviceName}_${serviceTag}
                    //             podman login -u ${username} -p ${password} $urlregistry
                    //             podman build --platform=linux/amd64 -t $serviceName -f dockerfile .
                    //             podman tag $serviceName docker.io/$myrepo/$serviceName-jenkins:$serviceTag
                    //             podman push docker.io/$myrepo/$serviceName-jenkins:$serviceTag
                    //         """
                    //     }
                    // }
                    echo "SKIP"
                }
            }
        }

        stage("Init To Fly.io"){
            steps{
                script{
                    // withCredentials([usernamePassword(credentialsId: 'fly-auth', passwordVariable: 'password', usernameVariable: 'username')]) {
                    //     try{
                    //         sh """
                    //             fly auth login --email ${username} --password ${password}
                                
                    //         """
                    //         serviceList.each { sourceService ->
                    //             serviceName = sourceService.split(':')[0].toString()
                    //             serviceTag = sourceService.split(':')[1].toString()

                    //             sh """
                    //                 fly apps create ${serviceName}-jenkins --org personal
                    //             """
                    //         }


                    //     }catch (err) {
                    //         echo "$err"
                    //     }
                        
                    // }

                    echo "SKIP"
                }
            }
        }

        stage("Deploy To Fly.io"){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'fly-auth', passwordVariable: 'password', usernameVariable: 'username')]) {
                        sh "fly auth login --email ${username} --password ${password}"
                        serviceList.each { sourceService ->
                            serviceName = sourceService.split(':')[0].toString()
                            serviceTag = sourceService.split(':')[1].toString()

                            if(serviceName == "api-gateway-fly"){
                                sh """
                                    cd ${serviceName}_${serviceTag}
                                    sh "cat ${WORKSPACE}/fly-config/jenkins/api-gateway.toml | sed 's/{APPNAME}/$serviceName-jenkins/g' > fly.toml"
                                """
                            }

                            sh """
                                cd ${serviceName}_${serviceTag}
                                sh "cat ${WORKSPACE}/fly-config/jenkins/backend-service.toml | sed 's/{APPNAME}/$serviceName-jenkins/g' > fly.toml"
                            """

                            // sh """
                            //     cd ${serviceName}_${serviceTag}
                            //     sed -i 's|{IMAGE}|docker.io/$myrepo/$serviceName-jenkins:$serviceTag|g' fly.toml
                            //     fly deploy --config fly.toml
                            // """
                        }

                        
                    }
                }
            }
        }
    }
}