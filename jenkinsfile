pipeline{
    agent{
        docker { 
            image 'my-light-dev-tools-all' 
            args '--privileged --user 0'
        }
        
    }

    environment{
        appsurl = "github.com/edwinmalihu/customer-service-fly.git"
        repoconfig = "github.com/edwinmalihu/fly-config.git"
        appname = "customer-service-fly"
        urlregistry = "https://registry-1.docker.io"
        myrepo = "edwinmalihu"

    }

    stages{
        stage("Clone Source"){
            steps{
                script{
                    cleanWs()
                    withCredentials([string(credentialsId: 'token-github', variable: 'GITHUB_TOKEN')]) {
                        // get sercvice
                        sh """
                            git clone --branch main https://oauth2:${GITHUB_TOKEN}@$appsurl $appname 
                            git clone --branch main https://oauth2:${GITHUB_TOKEN}@$repoconfig 
                        """
                        
                    }  
                }
            }
        }

        stage("Build & Push Image"){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-cred', passwordVariable: 'password', usernameVariable: 'username')]) {
                        sh """
                            cd $appname
                            ls
                            podman login -u ${username} -p ${password} $urlregistry
                            podman build --platform=linux/amd64 -t $appname -f dockerfile .
                            podman tag $appname docker.io/$myrepo/$appname-test:0.0.1
                            podman push docker.io/$myrepo/$appname-test:0.0.1
                        """
                    }
                }
            }
        }

        stage("Init To Fly.io"){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'fly-auth', passwordVariable: 'password', usernameVariable: 'username')]) {
                        try{
                            sh """
                                fly auth login --email ${username} --password ${password}
                                fly apps create ${appName}-test --org personal
                            """
                        }catch (err) {
                            echo "$err"
                        }
                        


                        sh "cat ${WORKSPACE}/fly-config/backend-service.toml | sed 's/{APPNAME}/$appname-test/g' > ${WORKSPACE}/$appname/fly.toml"
                    }
                }
            }
        }

        stage("Deploy To Fly.io"){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'fly-auth', passwordVariable: 'password', usernameVariable: 'username')]) {
                        sh """
                            cd $appname
                            fly auth login --email ${username} --password ${password}
                            sed -i 's|{IMAGE}|$myrepo/$appname-test:0.0.1|g' fly.toml
                            fly deploy --config fly.toml
                        """
                    }
                }
            }
        }
    }
}